// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentsBudgetSystem.Data;

#nullable disable

namespace PaymentsBudgetSystem.Data.Migrations
{
    [DbContext(typeof(PBSystemDbContext))]
    [Migration("20230709144253_TestMigration")]
    partial class TestMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAquired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("PaymentAssetDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ReportValue")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentAssetDetailsId");

                    b.HasIndex("UserId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89e250b8-9453-4099-0fc0-08db804f7559"),
                            DateAquired = new DateTime(2023, 1, 12, 10, 38, 16, 241, DateTimeKind.Unspecified).AddTicks(2308),
                            Description = "Windows 10 Enterprise",
                            PaymentAssetDetailsId = new Guid("7b4ec9b1-9022-4c9c-5640-08db804e8f7e"),
                            ReportValue = 350.00m,
                            Type = 11,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("90c86545-107a-4182-0fc1-08db804f7559"),
                            DateAquired = new DateTime(2023, 1, 12, 10, 38, 16, 241, DateTimeKind.Unspecified).AddTicks(2308),
                            Description = "Windows 10 Enterprise",
                            PaymentAssetDetailsId = new Guid("7b4ec9b1-9022-4c9c-5640-08db804e8f7e"),
                            ReportValue = 350.00m,
                            Type = 11,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("a4823c15-8389-4842-0fc2-08db804f7559"),
                            DateAquired = new DateTime(2023, 1, 12, 10, 38, 16, 241, DateTimeKind.Unspecified).AddTicks(2308),
                            Description = "Windows 10 Enterprise",
                            PaymentAssetDetailsId = new Guid("7b4ec9b1-9022-4c9c-5640-08db804e8f7e"),
                            ReportValue = 350.00m,
                            Type = 11,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("3ef2a82f-da80-427e-0fc3-08db804f7559"),
                            DateAquired = new DateTime(2023, 1, 12, 10, 38, 16, 241, DateTimeKind.Unspecified).AddTicks(2308),
                            Description = "MS SQL Server Enterprise",
                            PaymentAssetDetailsId = new Guid("7b4ec9b1-9022-4c9c-5640-08db804e8f7e"),
                            ReportValue = 24000.00m,
                            Type = 11,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("2d0b34c6-db91-4e5a-0fc4-08db804f7559"),
                            DateAquired = new DateTime(2023, 1, 8, 10, 49, 2, 57, DateTimeKind.Unspecified).AddTicks(8480),
                            Description = "Дисков масив QSAN SMB",
                            PaymentAssetDetailsId = new Guid("0636467d-e3aa-4b48-5643-08db804e8f7e"),
                            ReportValue = 22500.00m,
                            Type = 10,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("2d40dd08-22bf-4ec1-0fc5-08db804f7559"),
                            DateAquired = new DateTime(2023, 2, 12, 11, 4, 16, 897, DateTimeKind.Unspecified).AddTicks(9321),
                            Description = "Офис стол",
                            PaymentAssetDetailsId = new Guid("27ed4479-0a41-45ad-5646-08db804e8f7e"),
                            ReportValue = 220.00m,
                            Type = 9,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("f2249732-90f1-4793-0fc6-08db804f7559"),
                            DateAquired = new DateTime(2023, 2, 12, 11, 4, 16, 897, DateTimeKind.Unspecified).AddTicks(9321),
                            Description = "Офис стол",
                            PaymentAssetDetailsId = new Guid("27ed4479-0a41-45ad-5646-08db804e8f7e"),
                            ReportValue = 220.00m,
                            Type = 9,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("7e806068-961a-4d44-0fc7-08db804f7559"),
                            DateAquired = new DateTime(2023, 2, 12, 11, 4, 16, 897, DateTimeKind.Unspecified).AddTicks(9321),
                            Description = "Офис стол",
                            PaymentAssetDetailsId = new Guid("27ed4479-0a41-45ad-5646-08db804e8f7e"),
                            ReportValue = 220.00m,
                            Type = 9,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("9fce69a3-6e35-4b3d-0fc8-08db804f7559"),
                            DateAquired = new DateTime(2023, 2, 12, 11, 4, 16, 897, DateTimeKind.Unspecified).AddTicks(9321),
                            Description = "Бюро",
                            PaymentAssetDetailsId = new Guid("27ed4479-0a41-45ad-5646-08db804e8f7e"),
                            ReportValue = 325.00m,
                            Type = 9,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("a270f15d-1520-425a-0fc9-08db804f7559"),
                            DateAquired = new DateTime(2023, 4, 10, 11, 12, 12, 297, DateTimeKind.Unspecified).AddTicks(1277),
                            Description = "МФУ Brother",
                            PaymentAssetDetailsId = new Guid("ed82c4f5-4c19-44f4-564a-08db804e8f7e"),
                            ReportValue = 1525.20m,
                            Type = 10,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("da5a56fa-d860-400e-0fca-08db804f7559"),
                            DateAquired = new DateTime(2023, 4, 10, 11, 12, 12, 297, DateTimeKind.Unspecified).AddTicks(1277),
                            Description = "МФУ Brother",
                            PaymentAssetDetailsId = new Guid("ed82c4f5-4c19-44f4-564a-08db804e8f7e"),
                            ReportValue = 1525.20m,
                            Type = 10,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("e8045a2c-7d67-40ce-0fcb-08db804f7559"),
                            DateAquired = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Конферентна маса",
                            PaymentAssetDetailsId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            ReportValue = 1220.00m,
                            Type = 9,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("0eb104d0-c006-4fbc-0fcc-08db804f7559"),
                            DateAquired = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Конферентна маса",
                            PaymentAssetDetailsId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            ReportValue = 1220.00m,
                            Type = 9,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("0d546759-7099-4215-0fcd-08db804f7559"),
                            DateAquired = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Посетителски стол",
                            PaymentAssetDetailsId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            ReportValue = 120.00m,
                            Type = 9,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("a0369632-8aff-411f-0fce-08db804f7559"),
                            DateAquired = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Посетителски стол",
                            PaymentAssetDetailsId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            ReportValue = 120.00m,
                            Type = 9,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("9b623b4f-8fb0-425c-0fcf-08db804f7559"),
                            DateAquired = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Посетителски стол",
                            PaymentAssetDetailsId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            ReportValue = 120.00m,
                            Type = 9,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("7b6acfe4-941f-4cf4-0fd0-08db804f7559"),
                            DateAquired = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Посетителски стол",
                            PaymentAssetDetailsId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            ReportValue = 120.00m,
                            Type = 9,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Beneficiary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Beneficiaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17b94784-428a-4b5f-2b21-08db80453a86"),
                            Address = "гр. София, ж.к. \"Борово\", ул. \"Пътешествена\" № 16",
                            BankAccount = "BG44STSA56660103409444",
                            Identifier = "100255356",
                            Name = "ПОСОКА КОМ ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("3450ab68-623a-42de-2b22-08db80453a86"),
                            Address = "гр. София, бул. \"Централен\" № 2",
                            BankAccount = "BG48BGSF00001400901551",
                            Identifier = "951774380",
                            Name = "БГ СИСТЕМС ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("9405d63b-25fd-43d3-2b23-08db80453a86"),
                            Address = "гр. Самоков, ул. \"Генерал Пешев\" № 22",
                            BankAccount = "BG10UNCR56000012305100",
                            Identifier = "952080811",
                            Name = "МАКСИ ЕН ЕООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("d3bd3b31-bd00-4718-2b24-08db80453a86"),
                            Address = "гр. София, ж.к. \"Света Тройца\", ул. \"Автомобилна\" № 34",
                            BankAccount = "BG60UNCR56770033055000",
                            Identifier = "132237700",
                            Name = "СОФИЯ АУТО ЕООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("dffb36a4-6882-43fe-2b25-08db80453a86"),
                            Address = "гр. Пловдив, бул. \"В. Левски\" № 114",
                            BankAccount = "BG63STSA30005104521000",
                            Identifier = "659012547",
                            Name = "ОФИС КОНСУМАТИВИ АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("77b0827e-9ac2-4aba-2b26-08db80453a86"),
                            Address = "гр. София, ж.к. \"Младост 1\", ул. \"Спасовска\" № 1",
                            BankAccount = "BG49STSA57860103229469",
                            Identifier = "000364891",
                            Name = "ЕТ СПАСОВ - ДИМИТЪР СПАСОВ",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("3f4bba5f-4c3a-4230-2b27-08db80453a86"),
                            Address = "гр. София, ж.к. \"Бъкстон\", ул. \"Водна\" № 41",
                            BankAccount = "BG46BGSF40040341000635",
                            Identifier = "000358188",
                            Name = "СОФИЙСКА ВОДА АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("e5d7258e-a7b2-46f5-2b28-08db80453a86"),
                            Address = "гр. София, ж.к. \"Лозенец\", ул. \"Петко войвода\" № 11",
                            BankAccount = "BG09BNBG50195710913876",
                            Identifier = "546581074",
                            Name = "ЕНЕРГО БЪЛГАРИЯ АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("bc317b99-304e-43ba-2b29-08db80453a86"),
                            Address = "гр. Перник, ул. \"инж. Георги Иванов\" № 45",
                            BankAccount = "BG01UNCR60209275301978",
                            Identifier = "388489198",
                            Name = "КОНОВ И СИЕ АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("052c29cb-b9c6-42e9-2b2a-08db80453a86"),
                            Address = "гр. София, ж.к. \"Обеля\", бл. 259",
                            BankAccount = "BG62UNCR00060012300458",
                            Identifier = "981890789",
                            Name = "МЕГАСТОР АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("46b32cd0-8754-4b38-2b2b-08db80453a86"),
                            Address = "гр. София, ж.к. \"Надежда 4\", бул. \"Ломско шосе\" № 116",
                            BankAccount = "BG45BGSF24085234092780",
                            Identifier = "151541387",
                            Name = "И-НЕЙЧЪР ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("3bbaa90d-9c3d-4a84-c5fe-08db804fefc7"),
                            Address = "гр. София, ж.к. \"Надежда 1\", ул. \"Надежда\" № 15",
                            BankAccount = "BG45STSA44472051043877",
                            Identifier = "462367724",
                            Name = "ЕЛКОМ-БГ ООД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("daec7016-83d7-4bdb-c5ff-08db804fefc7"),
                            Address = "гр. София, ж.к. \"Мусагеница\", ул. \"Панайот Шипков\" № 10",
                            BankAccount = "BG11BNBG30000045010508",
                            Identifier = "455424624",
                            Name = "ДИАНА КЕТЪРИНГ ЕООД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("5c1db8b9-76b6-4d89-c600-08db804fefc7"),
                            Address = "гр. София, ж.к. \"Бъкстон\", ул. \"Дечко Делев\" № 40",
                            BankAccount = "BG66BNBG00061166810461",
                            Identifier = "000100230",
                            Name = "ЕЛЕКТРО-БГ АД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("1dde604d-8bae-4785-c601-08db804fefc7"),
                            Address = "гр. Кърджали, ул. \"Цар Симеон\" 4A",
                            BankAccount = "BG61STSA00000910004134",
                            Identifier = "128000031",
                            Name = "УНИВЕРС ООД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.CashPaymentDetails", b =>
                {
                    b.Property<Guid>("CashPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CashOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CashOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CashPaymentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CashPaymentDetails");

                    b.HasData(
                        new
                        {
                            CashPaymentId = new Guid("e24bc797-8024-47b9-563f-08db804e8f7e"),
                            CashOrderDate = new DateTime(2023, 7, 9, 10, 34, 31, 210, DateTimeKind.Unspecified).AddTicks(8796),
                            CashOrderNumber = 1,
                            EmployeeId = new Guid("5768e56a-8d2f-4ea7-cbe6-08db80474b75")
                        },
                        new
                        {
                            CashPaymentId = new Guid("c4d57ebc-2bc4-4f70-5644-08db804e8f7e"),
                            CashOrderDate = new DateTime(2023, 7, 9, 11, 2, 13, 206, DateTimeKind.Unspecified).AddTicks(8371),
                            CashOrderNumber = 2,
                            EmployeeId = new Guid("87008e93-86b0-43d4-cbe7-08db80474b75")
                        },
                        new
                        {
                            CashPaymentId = new Guid("5c5553a2-662a-41a1-5648-08db804e8f7e"),
                            CashOrderDate = new DateTime(2023, 7, 9, 11, 9, 43, 95, DateTimeKind.Unspecified).AddTicks(5819),
                            CashOrderNumber = 15,
                            EmployeeId = new Guid("d7d70d4c-ca53-4d05-cbf2-08db80474b75")
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.ConsolidatedBudget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalLimit")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ConsolidatedBudgets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0315e49b-3866-4f17-62a9-08db804a51c9"),
                            FiscalYear = 2023,
                            TotalLimit = 5000000.00m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContractType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEmployed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLeft")
                        .HasColumnType("datetime2");

                    b.Property<string>("Egn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b2c9857-a2fe-46f5-cbe3-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "0205123565",
                            FirstName = "Димитър",
                            LastName = "Андонов",
                            MonthlySalary = 1850.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("fb8e17f1-1324-4b42-cbe4-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "8211307712",
                            FirstName = "Илияна",
                            LastName = "Атанасова",
                            MonthlySalary = 2600.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("56495a09-76b4-4828-cbe5-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "7906125598",
                            FirstName = "Лиана",
                            LastName = "Михайлова",
                            MonthlySalary = 2200.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("5768e56a-8d2f-4ea7-cbe6-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2022, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "8109183040",
                            FirstName = "Благовест",
                            LastName = "Колев",
                            MonthlySalary = 1550.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("87008e93-86b0-43d4-cbe7-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2023, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "7405162258",
                            FirstName = "Евгени",
                            LastName = "Маджаров",
                            MonthlySalary = 3200.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("951dfe17-3ed4-4ee8-cbe8-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2023, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLeft = new DateTime(2023, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "9405051195",
                            FirstName = "Диана",
                            LastName = "Атанасова-Димчева",
                            MonthlySalary = 1800.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("1ea971ba-1da9-4af5-cbe9-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLeft = new DateTime(2023, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "0112164080",
                            FirstName = "Любомир",
                            LastName = "Бацанов",
                            MonthlySalary = 2400.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("08b60d14-da17-45c7-cbea-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2022, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "6907226568",
                            FirstName = "Станимир",
                            LastName = "Кьосев",
                            MonthlySalary = 1250.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("62c88f1b-19a2-4adb-cbeb-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "6612154400",
                            FirstName = "Михаил",
                            LastName = "Тодораков",
                            MonthlySalary = 4000.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("f7681106-88f0-4e13-cbec-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "7505301516",
                            FirstName = "Спаска",
                            LastName = "Кротева",
                            MonthlySalary = 1100.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("aa78e286-fca3-42d2-cbed-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "8409136080",
                            FirstName = "Момчил",
                            LastName = "Крайски",
                            MonthlySalary = 2600.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("57e51b62-48fd-408f-cbee-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLeft = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "9801027780",
                            FirstName = "Цветелина",
                            LastName = "Иванова",
                            MonthlySalary = 1600.00m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("21d55765-5afb-412f-cbef-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2022, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "8205015066",
                            FirstName = "Александър",
                            LastName = "Несторов",
                            MonthlySalary = 3600.00m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("a9a85601-7847-4872-cbf0-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLeft = new DateTime(2023, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "7511136065",
                            FirstName = "Ивелина",
                            LastName = "Шопова",
                            MonthlySalary = 4700.00m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("0d09c40d-943a-4ac2-cbf1-08db80474b75"),
                            ContractType = 0,
                            DateEmployed = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "9405053536",
                            FirstName = "Цветомир",
                            LastName = "Касабов",
                            MonthlySalary = 2850.00m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("d7d70d4c-ca53-4d05-cbf2-08db80474b75"),
                            ContractType = 1,
                            DateEmployed = new DateTime(2022, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "9211257005",
                            FirstName = "Росица",
                            LastName = "Иванова",
                            MonthlySalary = 2340.00m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.GlobalSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("SettingValue")
                        .HasColumnType("DECIMAL(12,4)");

                    b.HasKey("Id");

                    b.ToTable("GlobalSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SettingName = "Стопански инвентар - полезен живот в месеци",
                            SettingValue = 180m
                        },
                        new
                        {
                            Id = 2,
                            SettingName = "Стопански инвентар - процент остатъчна стойност",
                            SettingValue = 0.1m
                        },
                        new
                        {
                            Id = 3,
                            SettingName = "Техника и оборудване - полезен живот в месеци",
                            SettingValue = 60m
                        },
                        new
                        {
                            Id = 4,
                            SettingName = "Техника и оборудване - процент остатъчна стойност",
                            SettingValue = 0.15m
                        },
                        new
                        {
                            Id = 5,
                            SettingName = "Нематериални активи - полезен живот в месеци",
                            SettingValue = 12m
                        },
                        new
                        {
                            Id = 6,
                            SettingName = "Нематериални активи - процент остатъчна стойност",
                            SettingValue = 0m
                        },
                        new
                        {
                            Id = 7,
                            SettingName = "Фонд Пенсии - работодател",
                            SettingValue = 0.1372m
                        },
                        new
                        {
                            Id = 8,
                            SettingName = "Фонд Пенсии - служител",
                            SettingValue = 0.1058m
                        },
                        new
                        {
                            Id = 9,
                            SettingName = "Здравно осигуряване - работодател",
                            SettingValue = 0.048m
                        },
                        new
                        {
                            Id = 10,
                            SettingName = "Здравно осигуряване - служител",
                            SettingValue = 0.032m
                        },
                        new
                        {
                            Id = 11,
                            SettingName = "Oсигуряване в УПФ - работодател",
                            SettingValue = 0.028m
                        },
                        new
                        {
                            Id = 12,
                            SettingName = "Oсигуряване в УПФ - служител",
                            SettingValue = 0.022m
                        },
                        new
                        {
                            Id = 13,
                            SettingName = "Данък общ доход",
                            SettingValue = 0.1m
                        },
                        new
                        {
                            Id = 14,
                            SettingName = "Минимална работна заплата",
                            SettingValue = 780m
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.IndividualBudget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AssetsLimit")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<decimal>("SalariesLimit")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("SupportLimit")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IndividualBudgets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65490b49-1929-4323-a557-08db804a51ca"),
                            AssetsLimit = 250000m,
                            FiscalYear = 2023,
                            SalariesLimit = 2000000m,
                            SupportLimit = 700000m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("6ad66f5a-a320-49d2-a558-08db804a51ca"),
                            AssetsLimit = 75000m,
                            FiscalYear = 2023,
                            SalariesLimit = 300000m,
                            SupportLimit = 150000m,
                            UserId = "33fb1d42-a747-4860-b3ce-7e33a0421a0d"
                        },
                        new
                        {
                            Id = new Guid("bddb96e8-ea21-4391-a559-08db804a51ca"),
                            AssetsLimit = 200000m,
                            FiscalYear = 2023,
                            SalariesLimit = 800000m,
                            SupportLimit = 400000m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Paragraph")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8e27c5c-c1ad-471a-563e-08db804e8f7e"),
                            Amount = 9746.94m,
                            Date = new DateTime(2023, 1, 9, 10, 31, 50, 615, DateTimeKind.Unspecified).AddTicks(789),
                            Description = "Изплатени заплати за м.1 2023 г.",
                            Paragraph = 0,
                            PaymentType = 1,
                            ReceiverName = "Служители",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("e24bc797-8024-47b9-563f-08db804e8f7e"),
                            Amount = 650.00m,
                            Date = new DateTime(2023, 1, 11, 10, 34, 31, 210, DateTimeKind.Unspecified).AddTicks(7875),
                            Description = "Командировка гр. Силистра",
                            Paragraph = 8,
                            PaymentType = 0,
                            ReceiverName = "Благовест Колев",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("7b4ec9b1-9022-4c9c-5640-08db804e8f7e"),
                            Amount = 25050.00m,
                            Date = new DateTime(2023, 1, 12, 10, 38, 16, 241, DateTimeKind.Unspecified).AddTicks(2308),
                            Description = "Закупуване на нови лицензи за работа",
                            Paragraph = 11,
                            PaymentType = 4,
                            ReceiverName = "БГ СИСТЕМС ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("8b7cd7a0-2c74-4c8a-5641-08db804e8f7e"),
                            Amount = 1250.00m,
                            Date = new DateTime(2023, 1, 15, 10, 39, 19, 751, DateTimeKind.Unspecified).AddTicks(4929),
                            Description = "Закупуване на материали за ремонт на стая 407",
                            Paragraph = 6,
                            PaymentType = 3,
                            ReceiverName = "КОНОВ И СИЕ АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("149f280b-f4cf-4e47-5642-08db804e8f7e"),
                            Amount = 2750.00m,
                            Date = new DateTime(2023, 1, 21, 10, 45, 13, 158, DateTimeKind.Unspecified).AddTicks(323),
                            Description = "Осигуряване на кетъринг и обслужване за конференция в зала 4",
                            Paragraph = 7,
                            PaymentType = 3,
                            ReceiverName = "ДИАНА КЕТЪРИНГ ЕООД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("0636467d-e3aa-4b48-5643-08db804e8f7e"),
                            Amount = 22500.00m,
                            Date = new DateTime(2023, 1, 8, 10, 49, 2, 57, DateTimeKind.Unspecified).AddTicks(8480),
                            Description = "Закупуване на дисков масив за допълнителен сторидж",
                            Paragraph = 10,
                            PaymentType = 4,
                            ReceiverName = "ЕЛКОМ-БГ ООД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("c4d57ebc-2bc4-4f70-5644-08db804e8f7e"),
                            Amount = 660.00m,
                            Date = new DateTime(2023, 2, 2, 11, 2, 13, 206, DateTimeKind.Unspecified).AddTicks(8344),
                            Description = "Почистване и ремонт на служебен автомобил СА1015ВД",
                            Paragraph = 7,
                            PaymentType = 0,
                            ReceiverName = "Евгени Маджаров",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("5c7aa898-9b7e-4f17-5645-08db804e8f7e"),
                            Amount = 1200.00m,
                            Date = new DateTime(2023, 2, 9, 11, 3, 8, 12, DateTimeKind.Unspecified).AddTicks(3728),
                            Description = "Закупуване на самолетни билети за командировка - Белгия",
                            Paragraph = 8,
                            PaymentType = 3,
                            ReceiverName = "ПОСОКА КОМ ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("27ed4479-0a41-45ad-5646-08db804e8f7e"),
                            Amount = 985.00m,
                            Date = new DateTime(2023, 2, 12, 11, 4, 16, 897, DateTimeKind.Unspecified).AddTicks(9321),
                            Description = "Обзавеждане на стая 101",
                            Paragraph = 9,
                            PaymentType = 4,
                            ReceiverName = "МЕГАСТОР АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("ed64127e-fa2d-4e7d-5647-08db804e8f7e"),
                            Amount = 14352.64m,
                            Date = new DateTime(2023, 2, 21, 11, 5, 26, 482, DateTimeKind.Unspecified).AddTicks(1122),
                            Description = "Изплатени заплати за м.2 2023 г.",
                            Paragraph = 0,
                            PaymentType = 1,
                            ReceiverName = "Служители",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("5c5553a2-662a-41a1-5648-08db804e8f7e"),
                            Amount = 224.00m,
                            Date = new DateTime(2023, 3, 9, 11, 9, 43, 95, DateTimeKind.Unspecified).AddTicks(5792),
                            Description = "Възстановена сума на служител за проведен курс",
                            Paragraph = 7,
                            PaymentType = 0,
                            ReceiverName = "Росица Иванова",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("a26ffa37-40e5-456f-5649-08db804e8f7e"),
                            Amount = 5574.15m,
                            Date = new DateTime(2023, 3, 19, 11, 11, 5, 594, DateTimeKind.Unspecified).AddTicks(6825),
                            Description = "Електроенергия за м. януари 2023 г.",
                            Paragraph = 7,
                            PaymentType = 3,
                            ReceiverName = "ЕНЕРГО БЪЛГАРИЯ АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("ed82c4f5-4c19-44f4-564a-08db804e8f7e"),
                            Amount = 3050.40m,
                            Date = new DateTime(2023, 4, 10, 11, 12, 12, 297, DateTimeKind.Unspecified).AddTicks(1277),
                            Description = "Мултифункционално у-ство за отдел ЧР",
                            Paragraph = 10,
                            PaymentType = 4,
                            ReceiverName = "И-НЕЙЧЪР ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("0655dcef-51fc-4a50-564b-08db804e8f7e"),
                            Amount = 12500.00m,
                            Date = new DateTime(2023, 4, 15, 11, 16, 28, 934, DateTimeKind.Unspecified).AddTicks(6507),
                            Description = "Канцеларски материали за дирекция ЦДА",
                            Paragraph = 6,
                            PaymentType = 3,
                            ReceiverName = "ОФИС КОНСУМАТИВИ АД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("6342590f-6f84-4654-564c-08db804e8f7e"),
                            Amount = 29094.10m,
                            Date = new DateTime(2023, 5, 1, 11, 17, 43, 692, DateTimeKind.Unspecified).AddTicks(779),
                            Description = "Изплатени заплати за м.5 2023 г.",
                            Paragraph = 0,
                            PaymentType = 1,
                            ReceiverName = "Служители",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("178d9a33-702c-4cac-564d-08db804e8f7e"),
                            Amount = 17895.76m,
                            Date = new DateTime(2023, 5, 30, 11, 18, 24, 606, DateTimeKind.Unspecified).AddTicks(5379),
                            Description = "Изплатени заплати за м.5 2023 г.",
                            Paragraph = 0,
                            PaymentType = 1,
                            ReceiverName = "Служители",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            Amount = 2920.00m,
                            Date = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            Description = "Обзавеждане на конферентна зала",
                            Paragraph = 9,
                            PaymentType = 4,
                            ReceiverName = "УНИВЕРС ООД",
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3"
                        },
                        new
                        {
                            Id = new Guid("1973af10-ecd7-415f-564f-08db804e8f7e"),
                            Amount = 1650.00m,
                            Date = new DateTime(2023, 7, 9, 11, 26, 4, 220, DateTimeKind.Unspecified).AddTicks(7511),
                            Description = "Командировъчни разходи на нач. отдел \"Правен\"",
                            Paragraph = 8,
                            PaymentType = 3,
                            ReceiverName = "ПОСОКА КОМ ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        },
                        new
                        {
                            Id = new Guid("03b8e961-efa7-4395-5650-08db804e8f7e"),
                            Amount = 720.00m,
                            Date = new DateTime(2023, 7, 9, 11, 27, 0, 191, DateTimeKind.Unspecified).AddTicks(3745),
                            Description = "Хостинг за сайта на агенцията за 2023 г.",
                            Paragraph = 7,
                            PaymentType = 3,
                            ReceiverName = "БГ СИСТЕМС ООД",
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentAssetsDetails", b =>
                {
                    b.Property<Guid>("AssetPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetPaymentId");

                    b.HasIndex("BeneficiaryId");

                    b.ToTable("PaymentAssetsDetails");

                    b.HasData(
                        new
                        {
                            AssetPaymentId = new Guid("7b4ec9b1-9022-4c9c-5640-08db804e8f7e"),
                            BeneficiaryId = new Guid("3450ab68-623a-42de-2b22-08db80453a86"),
                            DeliveryDate = new DateTime(2023, 1, 12, 10, 38, 16, 241, DateTimeKind.Unspecified).AddTicks(2308),
                            InvoiceDate = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "0005189987"
                        },
                        new
                        {
                            AssetPaymentId = new Guid("0636467d-e3aa-4b48-5643-08db804e8f7e"),
                            BeneficiaryId = new Guid("3bbaa90d-9c3d-4a84-c5fe-08db804fefc7"),
                            DeliveryDate = new DateTime(2023, 1, 8, 10, 49, 2, 57, DateTimeKind.Unspecified).AddTicks(8480)
                        },
                        new
                        {
                            AssetPaymentId = new Guid("27ed4479-0a41-45ad-5646-08db804e8f7e"),
                            BeneficiaryId = new Guid("052c29cb-b9c6-42e9-2b2a-08db80453a86"),
                            DeliveryDate = new DateTime(2023, 2, 12, 11, 4, 16, 897, DateTimeKind.Unspecified).AddTicks(9321),
                            InvoiceDate = new DateTime(2022, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "0000004521"
                        },
                        new
                        {
                            AssetPaymentId = new Guid("ed82c4f5-4c19-44f4-564a-08db804e8f7e"),
                            BeneficiaryId = new Guid("46b32cd0-8754-4b38-2b2b-08db80453a86"),
                            DeliveryDate = new DateTime(2023, 4, 10, 11, 12, 12, 297, DateTimeKind.Unspecified).AddTicks(1277)
                        },
                        new
                        {
                            AssetPaymentId = new Guid("4bc8062d-af15-47fe-564e-08db804e8f7e"),
                            BeneficiaryId = new Guid("1dde604d-8bae-4785-c601-08db804fefc7"),
                            DeliveryDate = new DateTime(2023, 6, 2, 11, 21, 58, 94, DateTimeKind.Unspecified).AddTicks(7357),
                            InvoiceDate = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "1000602000"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentSalaryDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("IncomeTax")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("InsuranceAdditionalEmployee")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("InsuranceAdditionalEmployer")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("InsuranceHealthEmployee")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("InsuranceHealthEmployer")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("InsurancePensionEmployee")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("InsurancePensionEmployer")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("NetSalaryJobContract")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("NetSalaryStateOfficial")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentSalariesDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5df6be6-7256-4eaa-7415-08db804e8f82"),
                            EmployeeId = new Guid("9b2c9857-a2fe-46f5-cbe3-08db80474b75"),
                            IncomeTax = 155.44m,
                            InsuranceAdditionalEmployee = 40.70m,
                            InsuranceAdditionalEmployer = 51.80m,
                            InsuranceHealthEmployee = 59.20m,
                            InsuranceHealthEmployer = 88.80m,
                            InsurancePensionEmployee = 195.73m,
                            InsurancePensionEmployer = 253.82m,
                            NetSalaryJobContract = 1398.93m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("a8e27c5c-c1ad-471a-563e-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("a800f7aa-de8d-48a4-7416-08db804e8f82"),
                            EmployeeId = new Guid("56495a09-76b4-4828-cbe5-08db80474b75"),
                            IncomeTax = 184.84m,
                            InsuranceAdditionalEmployee = 48.40m,
                            InsuranceAdditionalEmployer = 61.60m,
                            InsuranceHealthEmployee = 70.40m,
                            InsuranceHealthEmployer = 105.60m,
                            InsurancePensionEmployee = 232.76m,
                            InsurancePensionEmployer = 301.84m,
                            NetSalaryJobContract = 1663.60m,
                            NetSalaryStateOfficial = 0.00m,
                            PaymentId = new Guid("a8e27c5c-c1ad-471a-563e-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("0a7f2190-3bec-45a2-7417-08db804e8f82"),
                            EmployeeId = new Guid("5768e56a-8d2f-4ea7-cbe6-08db80474b75"),
                            IncomeTax = 130.23m,
                            InsuranceAdditionalEmployee = 34.10m,
                            InsuranceAdditionalEmployer = 43.40m,
                            InsuranceHealthEmployee = 49.60m,
                            InsuranceHealthEmployer = 74.40m,
                            InsurancePensionEmployee = 163.99m,
                            InsurancePensionEmployer = 212.66m,
                            NetSalaryJobContract = 1172.08m,
                            NetSalaryStateOfficial = 0.00m,
                            PaymentId = new Guid("a8e27c5c-c1ad-471a-563e-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("ccbdddc2-8332-4d6c-7418-08db804e8f82"),
                            EmployeeId = new Guid("08b60d14-da17-45c7-cbea-08db80474b75"),
                            IncomeTax = 105.03m,
                            InsuranceAdditionalEmployee = 27.50m,
                            InsuranceAdditionalEmployer = 35.00m,
                            InsuranceHealthEmployee = 40.00m,
                            InsuranceHealthEmployer = 60.00m,
                            InsurancePensionEmployee = 132.25m,
                            InsurancePensionEmployer = 171.50m,
                            NetSalaryJobContract = 945.23m,
                            NetSalaryStateOfficial = 0.00m,
                            PaymentId = new Guid("a8e27c5c-c1ad-471a-563e-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("525f62b7-690a-4736-7419-08db804e8f82"),
                            EmployeeId = new Guid("57e51b62-48fd-408f-cbee-08db80474b75"),
                            IncomeTax = 87.74m,
                            InsuranceAdditionalEmployee = 0.00m,
                            InsuranceAdditionalEmployer = 43.87m,
                            InsuranceHealthEmployee = 0.00m,
                            InsuranceHealthEmployer = 70.19m,
                            InsurancePensionEmployee = 0.00m,
                            InsurancePensionEmployer = 213.21m,
                            NetSalaryJobContract = 0.00m,
                            NetSalaryStateOfficial = 789.68m,
                            PaymentId = new Guid("a8e27c5c-c1ad-471a-563e-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("3211970a-7f4f-4750-741a-08db804e8f82"),
                            EmployeeId = new Guid("21d55765-5afb-412f-cbef-08db80474b75"),
                            IncomeTax = 302.47m,
                            InsuranceAdditionalEmployee = 79.20m,
                            InsuranceAdditionalEmployer = 100.80m,
                            InsuranceHealthEmployee = 115.20m,
                            InsuranceHealthEmployer = 172.80m,
                            InsurancePensionEmployee = 380.88m,
                            InsurancePensionEmployer = 493.92m,
                            NetSalaryJobContract = 2722.25m,
                            NetSalaryStateOfficial = 0.00m,
                            PaymentId = new Guid("ed64127e-fa2d-4e7d-5647-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("d2522c0c-72bf-48e7-741b-08db804e8f82"),
                            EmployeeId = new Guid("a9a85601-7847-4872-cbf0-08db80474b75"),
                            IncomeTax = 470.00m,
                            InsuranceAdditionalEmployee = 0.00m,
                            InsuranceAdditionalEmployer = 235.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 376.0m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 1142.10m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 4230.00m,
                            PaymentId = new Guid("ed64127e-fa2d-4e7d-5647-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("7b9a2403-61af-4ef8-741c-08db804e8f82"),
                            EmployeeId = new Guid("d7d70d4c-ca53-4d05-cbf2-08db80474b75"),
                            IncomeTax = 234.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 117.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 187.20m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 568.62m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 2106.00m,
                            PaymentId = new Guid("ed64127e-fa2d-4e7d-5647-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("4c1ed72a-afa5-406a-741d-08db804e8f82"),
                            EmployeeId = new Guid("9b2c9857-a2fe-46f5-cbe3-08db80474b75"),
                            IncomeTax = 155.44m,
                            InsuranceAdditionalEmployee = 40.70m,
                            InsuranceAdditionalEmployer = 51.80m,
                            InsuranceHealthEmployee = 59.20m,
                            InsuranceHealthEmployer = 88.80m,
                            InsurancePensionEmployee = 195.73m,
                            InsurancePensionEmployer = 253.82m,
                            NetSalaryJobContract = 1398.93m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("cc4520c2-5d8d-4760-741e-08db804e8f82"),
                            EmployeeId = new Guid("fb8e17f1-1324-4b42-cbe4-08db80474b75"),
                            IncomeTax = 260.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 130.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 208.00m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 431.80m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 2340.00m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("ff783464-04c7-49cf-741f-08db804e8f82"),
                            EmployeeId = new Guid("56495a09-76b4-4828-cbe5-08db80474b75"),
                            IncomeTax = 184.84m,
                            InsuranceAdditionalEmployee = 48.40m,
                            InsuranceAdditionalEmployer = 61.60m,
                            InsuranceHealthEmployee = 70.40m,
                            InsuranceHealthEmployer = 105.60m,
                            InsurancePensionEmployee = 232.76m,
                            InsurancePensionEmployer = 301.84m,
                            NetSalaryJobContract = 1663.60m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("07b84d2e-754a-4da4-7420-08db804e8f82"),
                            EmployeeId = new Guid("5768e56a-8d2f-4ea7-cbe6-08db80474b75"),
                            IncomeTax = 130.23m,
                            InsuranceAdditionalEmployee = 34.10m,
                            InsuranceAdditionalEmployer = 43.40m,
                            InsuranceHealthEmployee = 49.60m,
                            InsuranceHealthEmployer = 74.40m,
                            InsurancePensionEmployee = 163.99m,
                            InsurancePensionEmployer = 212.66m,
                            NetSalaryJobContract = 1172.08m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("e664a122-c3c8-449b-7421-08db804e8f82"),
                            EmployeeId = new Guid("87008e93-86b0-43d4-cbe7-08db80474b75"),
                            IncomeTax = 320.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 160.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 256.00m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 777.60m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 2880.00m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("b5190512-3d13-484e-7422-08db804e8f82"),
                            EmployeeId = new Guid("951dfe17-3ed4-4ee8-cbe8-08db80474b75"),
                            IncomeTax = 136.60m,
                            InsuranceAdditionalEmployee = 35.77m,
                            InsuranceAdditionalEmployer = 45.52m,
                            InsuranceHealthEmployee = 52.03m,
                            InsuranceHealthEmployer = 78.04m,
                            InsurancePensionEmployee = 172.01m,
                            InsurancePensionEmployer = 223.06m,
                            NetSalaryJobContract = 1229.40m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("f81ce272-d8de-4a0e-7423-08db804e8f82"),
                            EmployeeId = new Guid("1ea971ba-1da9-4af5-cbe9-08db80474b75"),
                            IncomeTax = 201.65m,
                            InsuranceAdditionalEmployee = 52.80m,
                            InsuranceAdditionalEmployer = 67.20m,
                            InsuranceHealthEmployee = 76.80m,
                            InsuranceHealthEmployer = 115.20m,
                            InsurancePensionEmployee = 253.92m,
                            InsurancePensionEmployer = 329.28m,
                            NetSalaryJobContract = 1814.83m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("a4e0b3ae-7033-456a-7424-08db804e8f82"),
                            EmployeeId = new Guid("08b60d14-da17-45c7-cbea-08db80474b75"),
                            IncomeTax = 105.03m,
                            InsuranceAdditionalEmployee = 27.50m,
                            InsuranceAdditionalEmployer = 35.00m,
                            InsuranceHealthEmployee = 40.00m,
                            InsuranceHealthEmployer = 60.00m,
                            InsurancePensionEmployee = 132.25m,
                            InsurancePensionEmployer = 171.50m,
                            NetSalaryJobContract = 945.23m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("bf69ae2a-328d-4269-7425-08db804e8f82"),
                            EmployeeId = new Guid("f7681106-88f0-4e13-cbec-08db80474b75"),
                            IncomeTax = 110.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 55.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 88.00m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 267.30m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 990.00m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("7f5d827d-5730-453d-7426-08db804e8f82"),
                            EmployeeId = new Guid("aa78e286-fca3-42d2-cbed-08db80474b75"),
                            IncomeTax = 260.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 130.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 208.00m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 631.80m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 2340.00m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("48e5d1f8-adad-49a1-7427-08db804e8f82"),
                            EmployeeId = new Guid("57e51b62-48fd-408f-cbee-08db80474b75"),
                            IncomeTax = 160.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 80.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 128.00m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 388.80m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 1440.00m,
                            PaymentId = new Guid("6342590f-6f84-4654-564c-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("c256288a-8b6d-48d0-7428-08db804e8f82"),
                            EmployeeId = new Guid("21d55765-5afb-412f-cbef-08db80474b75"),
                            IncomeTax = 302.47m,
                            InsuranceAdditionalEmployee = 79.20m,
                            InsuranceAdditionalEmployer = 100.80m,
                            InsuranceHealthEmployee = 115.20m,
                            InsuranceHealthEmployer = 172.80m,
                            InsurancePensionEmployee = 380.88m,
                            InsurancePensionEmployer = 493.92m,
                            NetSalaryJobContract = 2722.25m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("178d9a33-702c-4cac-564d-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("6b6a4d04-f583-447d-7429-08db804e8f82"),
                            EmployeeId = new Guid("a9a85601-7847-4872-cbf0-08db80474b75"),
                            IncomeTax = 470.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 235.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 376.00m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 1142.10m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 4230.00m,
                            PaymentId = new Guid("178d9a33-702c-4cac-564d-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("1eeebe3d-a0c6-40e0-742a-08db804e8f82"),
                            EmployeeId = new Guid("0d09c40d-943a-4ac2-cbf1-08db80474b75"),
                            IncomeTax = 239.46m,
                            InsuranceAdditionalEmployee = 62.70m,
                            InsuranceAdditionalEmployer = 79.80m,
                            InsuranceHealthEmployee = 91.20m,
                            InsuranceHealthEmployer = 136.80m,
                            InsurancePensionEmployee = 301.53m,
                            InsurancePensionEmployer = 391.02m,
                            NetSalaryJobContract = 2155.11m,
                            NetSalaryStateOfficial = 0m,
                            PaymentId = new Guid("178d9a33-702c-4cac-564d-08db804e8f7e")
                        },
                        new
                        {
                            Id = new Guid("6d21aa45-7bef-4360-742b-08db804e8f82"),
                            EmployeeId = new Guid("d7d70d4c-ca53-4d05-cbf2-08db80474b75"),
                            IncomeTax = 234.00m,
                            InsuranceAdditionalEmployee = 0m,
                            InsuranceAdditionalEmployer = 117.00m,
                            InsuranceHealthEmployee = 0m,
                            InsuranceHealthEmployer = 187.20m,
                            InsurancePensionEmployee = 0m,
                            InsurancePensionEmployer = 568.62m,
                            NetSalaryJobContract = 0m,
                            NetSalaryStateOfficial = 2106.00m,
                            PaymentId = new Guid("178d9a33-702c-4cac-564d-08db804e8f7e")
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentSupportDetails", b =>
                {
                    b.Property<Guid>("SupportPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupportPaymentId");

                    b.HasIndex("BeneficiaryId");

                    b.ToTable("PaymentSupportDetails");

                    b.HasData(
                        new
                        {
                            SupportPaymentId = new Guid("8b7cd7a0-2c74-4c8a-5641-08db804e8f7e"),
                            BeneficiaryId = new Guid("bc317b99-304e-43ba-2b29-08db80453a86"),
                            InvoiceDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "0000000221"
                        },
                        new
                        {
                            SupportPaymentId = new Guid("149f280b-f4cf-4e47-5642-08db804e8f7e"),
                            BeneficiaryId = new Guid("daec7016-83d7-4bdb-c5ff-08db804fefc7"),
                            InvoiceDate = new DateTime(2022, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "1000602346"
                        },
                        new
                        {
                            SupportPaymentId = new Guid("5c7aa898-9b7e-4f17-5645-08db804e8f7e"),
                            BeneficiaryId = new Guid("17b94784-428a-4b5f-2b21-08db80453a86"),
                            InvoiceDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "0100000576"
                        },
                        new
                        {
                            SupportPaymentId = new Guid("a26ffa37-40e5-456f-5649-08db804e8f7e"),
                            BeneficiaryId = new Guid("e5d7258e-a7b2-46f5-2b28-08db80453a86"),
                            InvoiceDate = new DateTime(2023, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "9180795109"
                        },
                        new
                        {
                            SupportPaymentId = new Guid("0655dcef-51fc-4a50-564b-08db804e8f7e"),
                            BeneficiaryId = new Guid("dffb36a4-6882-43fe-2b25-08db80453a86"),
                            InvoiceDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "6684894894"
                        },
                        new
                        {
                            SupportPaymentId = new Guid("1973af10-ecd7-415f-564f-08db804e8f7e"),
                            BeneficiaryId = new Guid("17b94784-428a-4b5f-2b21-08db80453a86"),
                            InvoiceDate = new DateTime(2023, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "5000050684"
                        },
                        new
                        {
                            SupportPaymentId = new Guid("03b8e961-efa7-4395-5650-08db804e8f7e"),
                            BeneficiaryId = new Guid("3450ab68-623a-42de-2b22-08db80453a86"),
                            InvoiceDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "0000054848"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Bank0101")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank0102")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank1015")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank1020")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank1051")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank5100")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank5200")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Bank5300")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Cash1015")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Cash1020")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Cash1051")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<bool>("IsConsolidated")
                        .HasColumnType("bit");

                    b.Property<decimal>("LimitAssets")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("LimitSalaries")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("LimitSupport")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal>("Transfer0551")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Transfer0560")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Transfer0580")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Transfer0590")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0016fd5-368f-423e-ad6c-08db80565e8f"),
                            Bank0101 = 13403.91m,
                            Bank0102 = 10779.68m,
                            Bank1015 = 13750.00m,
                            Bank1020 = 5574.15m,
                            Bank1051 = 1200.00m,
                            Bank5100 = 985.00m,
                            Bank5200 = 3050.40m,
                            Bank5300 = 25050.00m,
                            Cash1015 = 0m,
                            Cash1020 = 660.00m,
                            Cash1051 = 650.00m,
                            IsConsolidated = false,
                            LimitAssets = 200000.00m,
                            LimitSalaries = 800000.00m,
                            LimitSupport = 400000.00m,
                            Month = 6,
                            Transfer0551 = 7217.88m,
                            Transfer0560 = 2376.26m,
                            Transfer0580 = 1485.16m,
                            Transfer0590 = 2687.07m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("e8cf571f-6486-4cfd-ad6d-08db80565e8f"),
                            Bank0101 = 13403.91m,
                            Bank0102 = 10779.68m,
                            Bank1015 = 13750.00m,
                            Bank1020 = 5574.15m,
                            Bank1051 = 1200.00m,
                            Bank5100 = 985.00m,
                            Bank5200 = 3050.40m,
                            Bank5300 = 25050.0m,
                            Cash1015 = 0m,
                            Cash1020 = 660.00m,
                            Cash1051 = 650.0m,
                            IsConsolidated = false,
                            LimitAssets = 200000m,
                            LimitSalaries = 800000.00m,
                            LimitSupport = 400000.0m,
                            Month = 5,
                            Transfer0551 = 7217.88m,
                            Transfer0560 = 2376.26m,
                            Transfer0580 = 1485.16m,
                            Transfer0590 = 2687.07m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("1e0ec52d-3294-4fcd-ad6e-08db80565e8f"),
                            Bank0101 = 7599.61m,
                            Bank0102 = 12672.0m,
                            Bank1015 = 0m,
                            Bank1020 = 2750.00m,
                            Bank1051 = 0m,
                            Bank5100 = 0m,
                            Bank5200 = 22500.0m,
                            Bank5300 = 0m,
                            Cash1015 = 0m,
                            Cash1020 = 224.00m,
                            Cash1051 = 0m,
                            IsConsolidated = false,
                            LimitAssets = 250000.0m,
                            LimitSalaries = 2000000.0m,
                            LimitSupport = 700000.0m,
                            Month = 5,
                            Transfer0551 = 5863.59m,
                            Transfer0560 = 1930.40m,
                            Transfer0580 = 1206.50m,
                            Transfer0590 = 2252.40m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("4cf49743-8e93-4aea-ad6f-08db80565e8f"),
                            Bank0101 = 7599.61m,
                            Bank0102 = 12672.00m,
                            Bank1015 = 0m,
                            Bank1020 = 2750.00m,
                            Bank1051 = 0m,
                            Bank5100 = 2920.0m,
                            Bank5200 = 22500.0m,
                            Bank5300 = 0m,
                            Cash1015 = 0m,
                            Cash1020 = 224.00m,
                            Cash1051 = 0m,
                            IsConsolidated = false,
                            LimitAssets = 250000.0m,
                            LimitSalaries = 2000000.0m,
                            LimitSupport = 700000.0m,
                            Month = 6,
                            Transfer0551 = 5863.59m,
                            Transfer0560 = 1930.40m,
                            Transfer0580 = 1206.50m,
                            Transfer0590 = 2252.40m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("35be5043-ea75-4fe2-ad70-08db80565e8f"),
                            Bank0101 = 21003.52m,
                            Bank0102 = 23451.68m,
                            Bank1015 = 13750.0m,
                            Bank1020 = 8324.15m,
                            Bank1051 = 1200.0m,
                            Bank5100 = 985.0m,
                            Bank5200 = 25550.40m,
                            Bank5300 = 25050.00m,
                            Cash1015 = 0m,
                            Cash1020 = 884.0m,
                            Cash1051 = 650.0m,
                            IsConsolidated = true,
                            LimitAssets = 525000.0m,
                            LimitSalaries = 3100000.0m,
                            LimitSupport = 1250000.0m,
                            Month = 5,
                            Transfer0551 = 13081.47m,
                            Transfer0560 = 4386.66m,
                            Transfer0580 = 2691.66m,
                            Transfer0590 = 4939.47m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("c881b1b5-f1a3-4bfb-ad71-08db80565e8f"),
                            Bank0101 = 21003.52m,
                            Bank0102 = 23451.68m,
                            Bank1015 = 13750.00m,
                            Bank1020 = 8324.15m,
                            Bank1051 = 1200.0m,
                            Bank5100 = 3905.00m,
                            Bank5200 = 25550.40m,
                            Bank5300 = 25050.00m,
                            Cash1015 = 0m,
                            Cash1020 = 884.00m,
                            Cash1051 = 650.00m,
                            IsConsolidated = true,
                            LimitAssets = 525000.0m,
                            LimitSalaries = 3100000.0m,
                            LimitSupport = 1250000.0m,
                            Month = 6,
                            Transfer0551 = 13081.47m,
                            Transfer0560 = 4306.66m,
                            Transfer0580 = 2691.66m,
                            Transfer0590 = 4939.47m,
                            UserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("cbd747ba-528c-45a9-ad72-08db80565e8f"),
                            Bank0101 = 5179.84m,
                            Bank0102 = 789.68m,
                            Bank1015 = 13750.0m,
                            Bank1020 = 5574.15m,
                            Bank1051 = 1200.00m,
                            Bank5100 = 985.00m,
                            Bank5200 = 3050.40m,
                            Bank5300 = 25050.00m,
                            Cash1015 = 0m,
                            Cash1020 = 660.00m,
                            Cash1051 = 650.00m,
                            IsConsolidated = false,
                            LimitAssets = 200000.0m,
                            LimitSalaries = 800000.0m,
                            LimitSupport = 400000.0m,
                            Month = 4,
                            Transfer0551 = 1877.76m,
                            Transfer0560 = 618.19m,
                            Transfer0580 = 386.37m,
                            Transfer0590 = 663.28m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("3f810f3c-ee75-40eb-ad73-08db80565e8f"),
                            Bank0101 = 5179.84m,
                            Bank0102 = 789.68m,
                            Bank1015 = 1250.0m,
                            Bank1020 = 5574.15m,
                            Bank1051 = 1200.0m,
                            Bank5100 = 985.0m,
                            Bank5200 = 0m,
                            Bank5300 = 25050.0m,
                            Cash1015 = 0m,
                            Cash1020 = 660.0m,
                            Cash1051 = 650.0m,
                            IsConsolidated = false,
                            LimitAssets = 200000.0m,
                            LimitSalaries = 800000.0m,
                            LimitSupport = 400000.0m,
                            Month = 3,
                            Transfer0551 = 1877.76m,
                            Transfer0560 = 618.19m,
                            Transfer0580 = 386.37m,
                            Transfer0590 = 663.28m,
                            UserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f",
                            Year = 2023
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "586513cb-2bad-4ea3-ae33-7b8954efb167",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c0cdd0c-0c05-4dd8-8925-32ef67b7f442",
                            Email = "Администратор",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Админитратор",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAELUwL9tJWahJkT86rjegmWEeVwcTY17TogG8DImA8YkBf5wNCBfmtCoubA2Gnt5MTg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "10f5cd77-da42-4d63-874b-f792170f08ca",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "33fb1d42-a747-4860-b3ce-7e33a0421a0d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e13db6bc-a1d9-4b80-b0df-3b24d7ab8bd9",
                            Email = "Областна администрация София",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Областна администрация София",
                            NormalizedUserName = "SF",
                            PasswordHash = "AQAAAAEAACcQAAAAEKs3J3v7vSpIF/6imQ52H04dD1BHnz2i5s+ueE/rPB1pAAFlQm0SmVuJTD6caYQiNg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f4a0494a-578a-4a43-af14-150988e3b179",
                            TwoFactorEnabled = false,
                            UserName = "sf"
                        },
                        new
                        {
                            Id = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e12a596-3d34-49aa-ad8c-ba6c656f14cb",
                            Email = "Министерски съвет",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Министерски съвет",
                            NormalizedUserName = "MC",
                            PasswordHash = "AQAAAAEAACcQAAAAELWA5nErLer/uq40eq0iyCpfKRCVUWpPaXb8zrzRiEvX/plP6fwxuuQoNZxjOZ7ezg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5eed5c1f-37ce-4c7a-8708-ba6d7b860272",
                            TwoFactorEnabled = false,
                            UserName = "mc"
                        },
                        new
                        {
                            Id = "a01f638b-535d-48bc-9cee-ec31217088b9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69e16a75-7a9e-47d1-8af7-27d6476d05e8",
                            Email = "Министерство на труда и социалната политика",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Министерство на труда и социалната политика",
                            NormalizedUserName = "MTSP",
                            PasswordHash = "AQAAAAEAACcQAAAAEIqk09BpsEWNKiyUpVHWgTY3A9IGWMqD9uHBzTK6odwfW+hTpebYWnVeI4oiGLk0wA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8330be88-50be-4462-8533-8ebaa228ea7c",
                            TwoFactorEnabled = false,
                            UserName = "mtsp"
                        },
                        new
                        {
                            Id = "f9e9db47-f25b-411f-ad79-2b2715dd132f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "47a95526-065b-4ad0-831b-b77d8ab4aa0a",
                            Email = "Държавна агенция Архиви",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Държавна агенция Архиви",
                            NormalizedUserName = "DAA",
                            PasswordHash = "AQAAAAEAACcQAAAAEPsE0hkBcj5mblXAu4PsU/xeO9jcbTh+v7/FnSrZsg1mib4xvf+URhot1jaesob6ig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "589d89ad-3eeb-49d6-bbc8-656461141595",
                            TwoFactorEnabled = false,
                            UserName = "daa"
                        });
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.UserDependancy", b =>
                {
                    b.Property<string>("PrimaryUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SecondaryUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PrimaryUserId", "SecondaryUserId");

                    b.ToTable("UsersDependancies");

                    b.HasData(
                        new
                        {
                            PrimaryUserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            SecondaryUserId = "33fb1d42-a747-4860-b3ce-7e33a0421a0d"
                        },
                        new
                        {
                            PrimaryUserId = "9c3aa9ca-3546-4a5a-a327-d1a0555dc2d3",
                            SecondaryUserId = "f9e9db47-f25b-411f-ad79-2b2715dd132f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Asset", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.PaymentAssetsDetails", "PaymentAssetsDetails")
                        .WithMany("Assets")
                        .HasForeignKey("PaymentAssetDetailsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("Assets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentAssetsDetails");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Beneficiary", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.CashPaymentDetails", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Payment", "Payment")
                        .WithOne("CashDetails")
                        .HasForeignKey("PaymentsBudgetSystem.Data.Entities.CashPaymentDetails", "CashPaymentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.ConsolidatedBudget", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("ConsolidatedBudgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Employee", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.IndividualBudget", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("IndividualBudgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Payment", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentAssetsDetails", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Payment", "Payment")
                        .WithOne("AssetsDetails")
                        .HasForeignKey("PaymentsBudgetSystem.Data.Entities.PaymentAssetsDetails", "AssetPaymentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Beneficiary", "Beneficiary")
                        .WithMany("AssetsDetails")
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiary");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentSalaryDetails", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Employee", "Employee")
                        .WithMany("SalaryDetails")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Payment", "Payment")
                        .WithMany("SalariesDetails")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentSupportDetails", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Beneficiary", "Beneficiary")
                        .WithMany("SupportDetails")
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentsBudgetSystem.Data.Entities.Payment", "Payment")
                        .WithOne("SupportDetails")
                        .HasForeignKey("PaymentsBudgetSystem.Data.Entities.PaymentSupportDetails", "SupportPaymentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Beneficiary");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Report", b =>
                {
                    b.HasOne("PaymentsBudgetSystem.Data.Entities.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Beneficiary", b =>
                {
                    b.Navigation("AssetsDetails");

                    b.Navigation("SupportDetails");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Employee", b =>
                {
                    b.Navigation("SalaryDetails");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.Payment", b =>
                {
                    b.Navigation("AssetsDetails")
                        .IsRequired();

                    b.Navigation("CashDetails")
                        .IsRequired();

                    b.Navigation("SalariesDetails");

                    b.Navigation("SupportDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.PaymentAssetsDetails", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("PaymentsBudgetSystem.Data.Entities.User", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Beneficiaries");

                    b.Navigation("ConsolidatedBudgets");

                    b.Navigation("Employees");

                    b.Navigation("IndividualBudgets");

                    b.Navigation("Payments");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
